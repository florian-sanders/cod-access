@use 'reset';

@import "src/styles/vars";

body {
  font-family: $font-text;
  color: $dark-color;
}

#root p {
  line-height: 1.9rem;
}

th {
  font-weight: bold;
}

tbody tr:nth-child(odd) {
  background-color: $ligth-color;
}

.hidden {
  display: none;
}

#root {
  position: relative;
  min-height: 100vh;
  padding-bottom: 4.9rem;

  @media screen and (max-width: 60rem) {
    padding-bottom: 12.9rem;
  }
}

strong {
  font-weight: bold;
}

.center{
  text-align: center;
}

.wave-double-bottom {
  background-image: url("src/assets/img/wave.svg");
  background-repeat: no-repeat;
  background-position: bottom;
  background-size: 100% auto;
  padding-bottom: 20rem;

  @media screen and (max-width: 55rem) {
    background: none;
  }

  @media screen and (max-width: 60rem) {
    padding-bottom: 7rem;
  }
}

.link {
  text-decoration: underline;
  color: $primary-color;
}

.message--warning {
  color: $color-error;
  font-size: 0.8em;
  margin-bottom: $gutter;
  word-wrap: break-word;

  &::before {
    content: "!";
    text-align: center;
    color: $white-color;
    padding: 1px;
    width: 17px;
    height: 17px;
    line-height: 15px;
    font-weight: bold;
    background-color: $color-error;
    border-radius: 50%;
    border: 1px $color-error solid;
    display: inline-block;
    margin-right: 0.5rem;
  }
}

.title-h1 {
  font-size: $font-size-title-h1;
  font-family: $font-title;
  font-weight: bold;
  margin-bottom: $gutter;
}

.title-h2 {
  font-size: $font-size-title-h2;
  font-family: $font-title;
  font-weight: bold;
  margin-bottom: $gutter;
}

.title-h3 {
  font-size: $font-size-title-h3;
  font-family: $font-title;
  font-weight: bold;
  margin-bottom: $gutter;
}

.form-label {
  display: block;
  margin-bottom: 1rem;
}

.form-input {
  display: block;
  margin-bottom: $gutter;
  padding: 16px 8px;
  border: none;
  border: solid 1px $dark-gray-color;
  border-radius: 5px;
  &:hover {
    border: solid 1px $dark-color;
  }
  &:focus {
    border: solid 2px $primary-color;
  }
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 1rem;
  min-height: 36px;
  letter-spacing: 1px;
  font-weight: bold;
  text-transform: uppercase;
  border-radius: 30px;

  &__text {
    margin-right: 0.5rem;
  }

  &[disabled] {
    filter: grayscale(100%);

    &:hover {
      box-shadow: none;
      cursor: not-allowed;
    }
  }
}

.button--primary {
  color: $white-color;
  background-color: $primary-color;
  border: none;
  padding: 8px 20px;
  box-shadow: 0px 1px 5px 0px rgba(7, 72, 94, 0.5);
  opacity: 0.9;

  &:hover {
    opacity: 1;
    box-shadow: 0px 4px 10px 0px rgba(7, 72, 94, 0.5);
  }
  &:active {
    opacity: 0.7;
    box-shadow: 0px 8px 10px 0px rgba(7, 72, 94, 0.5);
  }
}

.button--secondary {
  color: $primary-color;
  background-color: $white-color;
  border: solid 1px $dark-gray-color;
  padding: 8px 16px;
  border: 1px solid $primary-color;
  box-shadow: 0px 1px 5px 0px rgba(86, 105, 112, 0.5);

  &:hover {
    background-color: $gray-color;
    // box-shadow:  0px 6px 10px 0px rgba(86, 105, 112,0.5);
  }
  &:active {
    opacity: 0.7;
    background-color: $ligth-color;
    // box-shadow:  0px 10px 10px 0px rgba(86, 105, 112,0.5);
  }
}

.button--delete {
  background-color: $color-error;
  color: $white-color;
  border: none;
  padding: 8px 20px;
  box-shadow: 0px 1px 5px 0px rgba(7, 72, 94, 0.5);
  opacity: 0.9;
  &:hover {
    opacity: 1;
    box-shadow: 0px 4px 10px 0px rgba(7, 72, 94, 0.5);
  }
  &:active {
    opacity: 0.7;
    box-shadow: 0px 8px 10px 0px rgba(7, 72, 94, 0.5);
  }
}

@media screen and (max-width: 45rem) {
  .button {
    margin: 0.5rem;
    height: fit-content;
    letter-spacing: 1px;
    font-weight: bold;
    text-transform: uppercase;
  }

  .button--primary {
    color: $white-color;
    background-color: $primary-color;
    border: none;
    padding: 8px 20px;
    box-shadow: 0px 1px 5px 0px rgba(7, 72, 94, 0.5);
    opacity: 0.9;
    &:hover {
      opacity: 1;
      box-shadow: 0px 4px 10px 0px rgba(7, 72, 94, 0.5);
    }
    &:active {
      opacity: 0.7;
      box-shadow: 0px 8px 10px 0px rgba(7, 72, 94, 0.5);
    }
  }

  .button--secondary {
    background-color: $white-color;
    color: $primary-color;
    border: solid 1px $dark-gray-color;
    padding: 8px 16px;
    border: 1px solid $primary-color;
    box-shadow: 0px 1px 5px 0px rgba(86, 105, 112, 0.5);
    &:hover {
      background-color: $gray-color;
      // box-shadow:  0px 6px 10px 0px rgba(86, 105, 112,0.5);
    }
    &:active {
      opacity: 0.7;
      background-color: $ligth-color;
      // box-shadow:  0px 10px 10px 0px rgba(86, 105, 112,0.5);
    }
  }

  .button--delete {
    background-color: $color-error;
    color: $white-color;
    border: none;
    padding: 8px 20px;
    border-radius: 30px;
    box-shadow: 0px 1px 5px 0px rgba(7, 72, 94, 0.5);
    opacity: 0.9;
    &:hover {
      opacity: 1;
      box-shadow: 0px 4px 10px 0px rgba(7, 72, 94, 0.5);
    }
    &:active {
      opacity: 0.7;
      box-shadow: 0px 8px 10px 0px rgba(7, 72, 94, 0.5);
    }
  }
}

[type="checkbox"]:not(:checked),
[type="checkbox"]:checked {
  /* Cache la checkbox sans
	   la rendre invisible aux
	   lecteurs d'écran */
  position: absolute;
  left: 0;
  opacity: 0.01;
}

[type="checkbox"]:not(:checked) + label,
[type="checkbox"]:checked + label {
  position: relative; /* permet de positionner la checkbox */
  padding-left: 2.3em; /* place pour la box */
  font-size: 1.05em;
  line-height: 1.7;
  cursor: pointer;
}

[type="checkbox"]:not(:checked) + label::before,
[type="checkbox"]:checked + label::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  width: 1.4em;
  height: 1.4em;
  border: 1px solid #aaa;
  background: #fff;
  border-radius: 0.2em;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 0 rgba(203, 34, 237, 0.2);
  transition: all 0.275s;
}

[type="checkbox"]:not(:checked) + label::after,
[type="checkbox"]:checked + label::after {
  content: "x";
  speak: never; /* Pour être sûr que le lecteur d'écran ne lira pas "fois" */
  position: absolute;
  top: 0.38em;
  left: 0.18em;
  font-size: 1.6em;
  color: $primary-color;
  line-height: 0;
  transition: all 0.2s; /* Petite transition */
}

/* Aspect non cochée */
[type="checkbox"]:not(:checked) + label::after {
  opacity: 0;
  transform: scale(0) rotate(45deg);
}

/* Aspect cochée */
[type="checkbox"]:checked + label::after {
  opacity: 1;
  transform: scale(1) rotate(0);
}

/* Disabled checkbox */
[type="checkbox"]:disabled:not(:checked) + label::before,
[type="checkbox"]:disabled:checked + label::before {
  box-shadow: none;
  border-color: #bbb;
  background-color: #e9e9e9;
}

/* Disabled checked */
[type="checkbox"]:disabled:checked + label::after {
  color: #777;
}

[type="checkbox"]:disabled + label {
  color: #aaa;
}

/* Accessibility focus */
[type="checkbox"]:checked:focus + label::before,
[type="checkbox"]:not(:checked):focus + label::before {
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1), 0 0 0 6px #7ed9f77c;
}

/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/

.sr-only,
.sr-only-focusable {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px); /* 1 */
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%); /* 2 */
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap; /* 3 */
}

/*
	Use in conjunction with .sr-only to only display content when it's focused.
	@note Useful for skip links 
	@see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
	@note Based on a HTML5 Boilerplate technique, included in Bootstrap
	@note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver
		@author Sylvain Pigeard
		@see https://github.com/twbs/bootstrap/issues/20732
*/
.sr-only-focusable:focus,
.sr-only-focusable:active {
  clip: auto;
  -webkit-clip-path: none;
  clip-path: none;
  height: auto;
  margin: auto;
  overflow: visible;
  width: auto;
  white-space: normal;
}
